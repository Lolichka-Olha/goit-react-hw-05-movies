{"version":3,"file":"static/js/106.fcf0959d.chunk.js","mappings":"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","sources":["api/api.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09ade12554b40345f62518dc503f229d';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const searchMovies = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return response;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n\nexport const Info = styled.div`\n  margin-left: 100px;\n  h2 {\n    color: #3f51b5;\n    margin-bottom: 10px;\n  }\n  h3 {\n    padding-bottom: 10px;\n  }\n  p {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const MoreInfo = styled.div`\n  display: flex;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 6px 12px;\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  color: black;\n  &:not(:last-of-type) {\n    margin-right: 100px;\n  }\n`;\n\nexport const GenresContainer = styled.div`\n  display: flex;\n`;\n\nexport const Genres = styled.div`\n  display: flex;\n  &:not(:last-of-type) {\n    margin-right: 15px;\n  }\n  &:first-of-type {\n    margin-left: 20px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 6px 12px;\n  color: white;\n  font-size: 18px;\n  font-weight: 500;\n  border: none;\n  border-radius: 5px;\n  background-color: #3f51b5;\n  outline: none;\n  margin-bottom: 20px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  cursor: pointer;\n  transition: all 250ms linear;\n  &:hover {\n    color: black;\n    transition: all 250ms linear;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Info,\n  GenresContainer,\n  Genres,\n  MovieContainer,\n} from './MovieDetails.styled';\n\nconst MovieDetails = ({ movie }) => {\n  const {\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movie;\n\n  return (\n    <MovieContainer>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n            : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n        }\n        alt={original_title}\n      />\n      <Info>\n        <h1>{original_title}</h1>\n        <h2> ({release_date})</h2>\n        <p>User Score: {vote_average} %</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <GenresContainer>\n          <h3>Genres:</h3>\n          {genres &&\n            genres.map(({ id, name }) => <Genres key={id}>{name}</Genres>)}\n        </GenresContainer>\n      </Info>\n    </MovieContainer>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n      })\n    ).isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { getDetails } from '../api/api';\nimport Loader from '../components/Loader/Loader';\nimport MovieDetails from '../components/MovieDetails/MovieDetails';\nimport {\n  StyledLink,\n  Button,\n  MoreInfo,\n} from '../components/MovieDetails/MovieDetails.styled';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const goBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  useEffect(() => {\n    const fetchMoviesDetails = async movieId => {\n      setLoading(true);\n      try {\n        const { data } = await getDetails(movieId);\n        // console.log(data);\n        setMovie(data);\n      } catch (error) {\n        setError('Page is not found');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMoviesDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <section>\n        <Button type=\"button\" onClick={goBack}>\n          Go back\n        </Button>\n        {loading && <Loader />}\n        {movie && <MovieDetails movie={movie} />}\n        {error && <p>Something went wrong, please try again later!</p>}\n      </section>\n      <section>\n        <MoreInfo>\n          <StyledLink\n            to={`/movies/${movieId}/cast`}\n            state={{ from: location?.state?.from }}\n          >\n            Cast\n          </StyledLink>\n\n          <StyledLink\n            to={`/movies/${movieId}/reviews`}\n            state={{ from: location?.state?.from }}\n          >\n            Reviews\n          </StyledLink>\n        </MoreInfo>\n      </section>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["axios","API_KEY","getTrending","response","searchMovies","searchQuery","getDetails","movieId","getCast","getReviews","MovieContainer","styled","Info","MoreInfo","StyledLink","Link","GenresContainer","Genres","Button","movie","original_title","genres","overview","poster_path","release_date","vote_average","src","alt","map","id","name","useParams","useState","setMovie","error","setError","loading","setLoading","navigate","useNavigate","location","useLocation","useEffect","fetchMoviesDetails","data","type","onClick","state","from","Loader","to"],"sourceRoot":""}