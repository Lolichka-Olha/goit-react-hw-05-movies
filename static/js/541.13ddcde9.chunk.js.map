{"version":3,"file":"static/js/541.13ddcde9.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,IAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,IAAAA,IAAA,gCACIC,EADJ,iCACoCI,EADpC,gCADG,cACpBF,EADoB,yBAInBA,GAJmB,2CAAH,sDAOZG,EAAU,mCAAG,WAAMC,GAAN,uFACDP,IAAAA,IAAA,iBACXO,EADW,oBACQN,EADR,oBADC,cAClBE,EADkB,yBAIjBA,GAJiB,2CAAH,sDAOVK,EAAO,mCAAG,WAAMD,GAAN,uFACEP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,EADhB,oBADF,cACfE,EADe,yBAIdA,GAJc,2CAAH,sDAOPM,EAAU,mCAAG,WAAMF,GAAN,uFACDP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,EADhB,oBADC,cAClBE,EADkB,yBAIjBA,GAJiB,2CAAH,qD,qKC7BVO,EAAOC,EAAAA,EAAAA,GAAH,+JASJC,EAAOD,EAAAA,EAAAA,GAAH,gaAkBJE,EAAOF,EAAAA,EAAAA,IAAH,oF,SCJjB,EAtBoB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACrB,OACE,SAACJ,EAAD,UACGI,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,aAAcC,EAApC,EAAoCA,UAApC,OACT,UAACP,EAAD,YACE,gBACEQ,IACEF,EAAY,0CAC2BA,GACnC,oHAENG,IAAKJ,KAEP,UAACJ,EAAD,YACE,wBAAKI,KACL,uBAAIE,SAXGH,EADF,KAkBhB,E,UCUD,EA5BiB,WACf,IAAQT,GAAYe,EAAAA,EAAAA,MAAZf,QACR,GAA0BgB,EAAAA,EAAAA,UAAS,IAAnC,eAAOT,EAAP,KAAcU,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMrB,GAAN,gFAChBmB,GAAW,GADK,mBAGSlB,EAAAA,EAAAA,IAAQD,GAHjB,gBAGNsB,EAHM,EAGNA,KACRL,EAASK,EAAKC,MAJA,gDAMdC,QAAQC,IAAR,MANc,yBAQdN,GAAW,GARG,4EAAH,sDAWfE,EAAUrB,EACX,GAAE,CAACA,KAGF,gCACGkB,IAAW,SAACQ,EAAA,EAAD,IACM,IAAjBnB,EAAMoB,QAAe,SAAC,EAAD,CAAMpB,MAAOA,KAAY,uCAGpD,C","sources":["api/api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","pages/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09ade12554b40345f62518dc503f229d';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const searchMovies = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return response;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: -20px;\n  margin-left: -20px;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 5 - 20px);\n  margin-top: 20px;\n  margin-left: 20px;\n  border-radius: 5px;\n  overflow: hidden;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  transform: scale(1);\n  transition: all 250ms linear;\n  &:hover {\n    transform: scale(1.05);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Info = styled.div`\n  font-size: 14px;\n  padding: 8px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { List, Item, Info } from './Cast.styled';\n\nexport const Cast = ({ casts }) => {\n  return (\n    <List>\n      {casts.map(({ id, original_name, profile_path, character }) => (\n        <Item key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n            }\n            alt={original_name}\n          />\n          <Info>\n            <h3>{original_name}</h3>\n            <p>{character}</p>\n          </Info>\n        </Item>\n      ))}\n    </List>\n  );\n};\nexport default Cast;\n\nCast.propTypes = {\n  casts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n      character: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCast } from '../api/api';\nimport Cast from '../components/Cast/Cast';\nimport Loader from 'components/Loader/Loader';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async movieId => {\n      setLoading(true);\n      try {\n        const { data } = await getCast(movieId);\n        setCasts(data.cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {casts.length !== 0 ? <Cast casts={casts} /> : <p>Not found</p>}\n    </>\n  );\n};\n\nexport default CastPage;\n"],"names":["axios","API_KEY","getTrending","response","searchMovies","searchQuery","getDetails","movieId","getCast","getReviews","List","styled","Item","Info","casts","map","id","original_name","profile_path","character","src","alt","useParams","useState","setCasts","loading","setLoading","useEffect","fetchCast","data","cast","console","log","Loader","length"],"sourceRoot":""}