{"version":3,"file":"static/js/79.a781dff5.chunk.js","mappings":"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","sources":["api/api.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09ade12554b40345f62518dc503f229d';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie/?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n  return response;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n","import styled from '@emotion/styled';\n\nimport { Link } from 'react-router-dom';\n\nexport const StyledItem = styled.li`\n  &:not(:last-of-type) {\n    margin-bottom: 4px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  font-size: 18px;\n\n  &:hover,\n  &:focus {\n    transition: all 250ms linear;\n    color: coral;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledLink, StyledItem } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <StyledItem key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </StyledLink>\n        </StyledItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { GoSearch } from 'react-icons/go';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  color: #fff;\n  margin-bottom: 20px;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const StyledInput = styled.input`\n  height: 100%;\n  display: inline-block;\n  width: 100%;\n  vertical-align: middle;\n  font: inherit;\n  font-size: 18px;\n  border: 1px solid #cacaca;\n  border-radius: 4px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  size: 50px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n\nexport const StyledFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 28px;\n  margin-left: 8px;\n  border: 1px solid #cacaca;\n  border-radius: 4px;\n  background-size: 80%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: all 250ms linear;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Icon = styled(GoSearch)`\n  width: 20px;\n  height: 20px;\n  vertical-align: middle;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormContainer,\n  StyledForm,\n  StyledInput,\n  StyledFormBtn,\n  Icon,\n} from './SearchBar.styled';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  const handleChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <FormContainer>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledInput\n          name=\"search\"\n          onChange={handleChange}\n          value={searchQuery}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search\"\n          required\n        />\n        <StyledFormBtn type=\"submit\">\n          <Icon />\n        </StyledFormBtn>\n      </StyledForm>\n    </FormContainer>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { searchMovies } from '../api/api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from '../components/MovieList/MovieList';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport Loader from '../components/Loader/Loader';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search') ?? '';\n\n  useEffect(() => {\n    if (search) {\n      const fetchMovies = async () => {\n        setLoading(true);\n        try {\n          const { data } = await searchMovies(search);\n\n          setMovies(data.results);\n        } catch (error) {\n          console.log(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchMovies();\n    }\n  }, [search]);\n\n  const changeSearch = search => {\n    setSearchParams({ search });\n  };\n\n  return (\n    <main>\n      <SearchBar onSubmit={changeSearch} />\n      {loading && <Loader />}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","API_KEY","getTrending","response","searchMovies","query","getDetails","movieId","getCast","getReviews","StyledItem","styled","StyledLink","Link","movies","location","useLocation","map","id","title","to","state","from","FormContainer","StyledForm","StyledInput","StyledFormBtn","Icon","GoSearch","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","name","onChange","currentTarget","value","toLowerCase","type","autoComplete","autoFocus","placeholder","required","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","search","get","useEffect","fetchMovies","data","results","console","log","Loader","length"],"sourceRoot":""}